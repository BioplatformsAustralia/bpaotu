#
FROM bioplatformsaustralia/bpaotu-builder
MAINTAINER https://github.com/bioplatformsaustralia/bpaotu

# Runtime args, don't re-use build time args
ENV PRODUCTION 0
ENV DEBUG 1

# Strictly speaking not needed as we mount over the top
# However let's make it explicit that we don't want /app from the build image
RUN rm -rf /app && mkdir -p /app

# # For dev we use root so we can shell in and do evil things
USER root
WORKDIR /app

RUN env | sort

# Add our python deps in multiple docker layers
# hgvs was failing due to lack of nose, hence the order
COPY ./requirements/dev-requirements.txt /app/bpaotu/
RUN pip install --upgrade -r bpaotu/dev-requirements.txt
COPY ./requirements/test-requirements.txt /app/bpaotu/
RUN pip install --upgrade -r bpaotu/test-requirements.txt
COPY ./requirements/runtime-requirements.txt /app/bpaotu/
RUN pip install --upgrade -r bpaotu/runtime-requirements.txt
COPY ./requirements/biom-requirements.txt /app/bpaotu/
RUN pip install --upgrade -r bpaotu/biom-requirements.txt
# COPY ./bpa-ingest/requirements.txt /app/bpaotu/bpaingest-requirements.txt
# RUN pip install --upgrade -r bpaotu/bpaingest-requirements.txt

# Copy code and install the app
COPY . /app
RUN pip ${PIP_OPTS} install --upgrade -e bpaotu
# RUN pip ${PIP_OPTS} install --upgrade -e bpa-ingest
WORKDIR /app/bpa-ingest
RUN pip install --no-cache-dir --upgrade pip \
 && pip install --no-cache-dir poetry \
 && poetry config virtualenvs.create false \
 && poetry build --format sdist \
 && tar -xvf dist/*-`poetry version -s`.tar.gz \
    -O bpaingest-`poetry version -s`/setup.py > setup.py \
 && mv pyproject.toml pyproject.toml.bkup \
 && pip ${PIP_OPTS} install --upgrade -e . \
 && mv pyproject.toml.bkup pyproject.toml \
 && pip uninstall --yes poetry

EXPOSE 8000 9000 9001 9100 9101
VOLUME ["/app", "/data"]

ENV HOME /data
WORKDIR /data

# entrypoint shell script that by default starts runserver
ENTRYPOINT ["/app/docker-entrypoint.sh"]
CMD ["runserver_plus"]
